; Функция Аккерамана

(define (A x y)
	(cond ((= y 0) 0)
	      ((= x 0) (* 2 y))
	      ((= y 1) 2)
	      (else (A (- x 1)
	               (A x (- y 1))))))

(A 1 10)
(A 0 (A 1 9))
(A 0 (A 0 (A 1 8)))
(A 0 (A 0 (A 0 (A 1 7))))
(A 0 (A 0 (A 0 (A 0 (A 1 6))))
(A 0 (A 0 (A 0 (A 0 (A 0 (A 1 5))))))
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 1 4)))))))
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 1 3)))))))
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 1 2)))))))))
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 1 1)))))))))              ; 2^0
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 2)))))))                     ; 2^1
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 4)))))                            ; 2^2
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 8)))                                   ; 2^3
(A 0 (A 0 (A 0 (A 0 (A 0 (A 0 16)                                         ; 2^4
(A 0 (A 0 (A 0 (A 0 (A 0 32)                                              ; 2^5
(A 0 (A 0 (A 0 (A 0 64)                                                   ; 2^6
(A 0 (A 0 (A 0 128)                                                       ; 2^7
(A 0 (A 0 256)                                                            ; 2^8
(A 0 512)                                                                 ; 2^9
1024                                                                      ; 2^10

; Значит (A 1 10) = 1024, можем сделать вывод, что (g n) = (A 1 n) = 2 ^ n

; (A 2 4) = 65536, => (h n) = 2^2^2^2...^2, где количество возведений
; в квадрат равно n

; (A f n) = (A 0 n) = 2n

;(A 3 3) = 65536
